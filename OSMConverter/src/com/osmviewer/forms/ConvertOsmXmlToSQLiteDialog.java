package com.osmviewer.forms;

import com.osmviewer.xmlDrawSettings.XmlMapObjectsIdFinder;
import com.osmviewer.osmXml.exceptions.ParsingOsmErrorException;
import com.osmviewer.sqliteMapDataSource.OsmXmlToSQLiteDatabaseConverter;
import com.osmviewer.sqliteMapDataSource.exceptions.DatabaseErrorExcetion;
import com.osmviewer.sqliteMapDataSource.exceptions.DeletingExistsDatabaseFileErrorException;
import java.io.File;
import java.io.FileNotFoundException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Dialog for converting osm xml file to SQLite map database file
 *
 * @author pgalex
 */
public class ConvertOsmXmlToSQLiteDialog extends javax.swing.JDialog
{
	/**
	 * Choosed source .osm xml file
	 */
	private File sourceFile;
	/**
	 * Choosed destenation sqlite database file
	 */
	private File destenationFile;

	/**
	 * Create new dialog
	 */
	public ConvertOsmXmlToSQLiteDialog()
	{
		super();
		initComponents();
		setTitle("OSMConverter");

		sourceFile = null;
		destenationFile = null;
		updateConvertButtonEnabledByFilesChoosing();
	}

	/**
	 * Update enabled of convert button by all or not necessary choosed
	 */
	private void updateConvertButtonEnabledByFilesChoosing()
	{
		boolean canRunConverting = false;
		if (sourceFile != null && destenationFile != null)
		{
			if (!sourceFile.getPath().equalsIgnoreCase(destenationFile.getPath()))
			{
				canRunConverting = true;
			}
		}
		jButtonConvert.setEnabled(canRunConverting);
	}

	/**
	 * Convert source file (osm xml) to destenation file (database)
	 *
	 * @param sourceFile source (osm xml) file
	 * @param destenationFile destenation (database)file
	 * @throws IllegalArgumentException sourceFile or destenationFile is null
	 */
	private void runConverting() throws IllegalArgumentException
	{
		if (sourceFile == null)
		{
			throw new IllegalArgumentException("sourceFile is null");
		}
		if (destenationFile == null)
		{
			throw new IllegalArgumentException("destenationFile is null");
		}

		OsmXmlToSQLiteDatabaseConverter converter = new OsmXmlToSQLiteDatabaseConverter(new XmlMapObjectsIdFinder());
		try
		{
			converter.convert(sourceFile.getPath(), destenationFile.getPath());
		}
		catch (FileNotFoundException ex)
		{
			JOptionPane.showMessageDialog(this, "Can not read source file", "Error", JOptionPane.ERROR_MESSAGE);
		}
		catch (ParsingOsmErrorException ex)
		{
			JOptionPane.showMessageDialog(this, "Error while parsing xml", "Error", JOptionPane.ERROR_MESSAGE);
		}
		catch (DeletingExistsDatabaseFileErrorException ex)
		{
			JOptionPane.showMessageDialog(this, "Can not delete exists destenation file", "Error", JOptionPane.ERROR_MESSAGE);
		}
		catch (DatabaseErrorExcetion ex)
		{
			JOptionPane.showMessageDialog(this, "Database error", "Error", JOptionPane.ERROR_MESSAGE);
		}
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[])
	{
		/*
		 * Set the Nimbus look and feel
		 */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try
		{
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
			{
				if ("Nimbus".equals(info.getName()))
				{
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		}
		catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex)
		{
			java.util.logging.Logger.getLogger(ConvertOsmXmlToSQLiteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/*
		 * Create and display the form
		 */
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			@Override
			public void run()
			{
				ConvertOsmXmlToSQLiteDialog mainFrame = new ConvertOsmXmlToSQLiteDialog();
				mainFrame.setLocationRelativeTo(null);
				mainFrame.setVisible(true);
			}
		});
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jButtonConvert = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jTextFieldSourceFileName = new javax.swing.JTextField();
    jButtonChooseSourceFile = new javax.swing.JButton();
    jTextFieldDestenationFileName = new javax.swing.JTextField();
    jButtonChooseDestenationFile = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    jButtonConvert.setText("Конвертировать");
    jButtonConvert.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButtonConvertActionPerformed(evt);
      }
    });

    jLabel1.setText("Исходный .osm файл");

    jLabel2.setText("Файл БД:");

    jTextFieldSourceFileName.setEditable(false);

    jButtonChooseSourceFile.setText("Выбрать");
    jButtonChooseSourceFile.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButtonChooseSourceFileActionPerformed(evt);
      }
    });

    jTextFieldDestenationFileName.setEditable(false);

    jButtonChooseDestenationFile.setText("Выбрать");
    jButtonChooseDestenationFile.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButtonChooseDestenationFileActionPerformed(evt);
      }
    });

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(layout.createSequentialGroup()
            .add(jButtonConvert)
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .add(layout.createSequentialGroup()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
              .add(jLabel1)
              .add(jLabel2))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
              .add(jTextFieldSourceFileName)
              .add(jTextFieldDestenationFileName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
              .add(jButtonChooseSourceFile)
              .add(jButtonChooseDestenationFile))
            .add(69, 69, 69))))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel1)
          .add(jTextFieldSourceFileName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
          .add(jButtonChooseSourceFile))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jTextFieldDestenationFileName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
          .add(jLabel2)
          .add(jButtonChooseDestenationFile))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(jButtonConvert)
        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jButtonChooseSourceFileActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonChooseSourceFileActionPerformed
  {//GEN-HEADEREND:event_jButtonChooseSourceFileActionPerformed
		JFileChooser sourceFileChooser = new JFileChooser();
		sourceFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
		int sourceFileShowDialogResult = sourceFileChooser.showOpenDialog(this);
		if (sourceFileShowDialogResult == JFileChooser.APPROVE_OPTION)
		{
			sourceFile = sourceFileChooser.getSelectedFile();

			jTextFieldSourceFileName.setText(sourceFile.getPath());
			updateConvertButtonEnabledByFilesChoosing();
		}

  }//GEN-LAST:event_jButtonChooseSourceFileActionPerformed

  private void jButtonChooseDestenationFileActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonChooseDestenationFileActionPerformed
  {//GEN-HEADEREND:event_jButtonChooseDestenationFileActionPerformed
		JFileChooser destenationFileChooser = new JFileChooser();
		int destenationFileShowDialogResult = destenationFileChooser.showSaveDialog(this);
		if (destenationFileShowDialogResult == JFileChooser.APPROVE_OPTION)
		{
			destenationFile = destenationFileChooser.getSelectedFile();

			jTextFieldDestenationFileName.setText(destenationFile.getPath());
			updateConvertButtonEnabledByFilesChoosing();
		}

  }//GEN-LAST:event_jButtonChooseDestenationFileActionPerformed

  private void jButtonConvertActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonConvertActionPerformed
  {//GEN-HEADEREND:event_jButtonConvertActionPerformed
		if (sourceFile != null && destenationFile != null)
		{
			runConverting();
		}
  }//GEN-LAST:event_jButtonConvertActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButtonChooseDestenationFile;
  private javax.swing.JButton jButtonChooseSourceFile;
  private javax.swing.JButton jButtonConvert;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JTextField jTextFieldDestenationFileName;
  private javax.swing.JTextField jTextFieldSourceFileName;
  // End of variables declaration//GEN-END:variables
}
