package com.osmviewer.forms;

import com.osmviewer.osmXml.exceptions.ParsingOsmErrorException;
import com.osmviewer.sqliteMapDataSource.OsmXmlToSQLiteDatabaseConverter;
import com.osmviewer.sqliteMapDataSource.exceptions.CanNotDeleteExistsDatabaseFileErrorException;
import java.awt.Window;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Dialog for converting osm xml file to SQLite map database file
 *
 * @author pgalex
 */
public class ConvertOsmXmlToSQLiteDialog extends javax.swing.JDialog
{
	/**
	 * Create new dialog
	 *
	 * @param parentWindow parent window
	 * @param modalityType modality type of dialog
	 */
	public ConvertOsmXmlToSQLiteDialog(Window parentWindow, ModalityType modalityType)
	{
		super(parentWindow, modalityType);
		initComponents();
		setTitle("Конвертирование osm xml");
	}

	/**
	 * Convert source file (osm xml) to destenation file (database)
	 *
	 * @param sourceFile source (osm xml) file
	 * @param destenationFile destenation (database)file
	 * @throws IllegalArgumentException sourceFile or destenationFile is null
	 */
	private void runConvertion(File sourceFile, File destenationFile) throws IllegalArgumentException
	{
		if (sourceFile == null)
		{
			throw new IllegalArgumentException("sourceFile is null");
		}
		if (destenationFile == null)
		{
			throw new IllegalArgumentException("destenationFile is null");
		}

		OsmXmlToSQLiteDatabaseConverter converter = new OsmXmlToSQLiteDatabaseConverter();
		try
		{
			converter.convert(new FileInputStream(sourceFile), destenationFile.getPath());
		}
		catch (FileNotFoundException ex)
		{
			JOptionPane.showMessageDialog(this, "Can not read from source file", "Error", JOptionPane.ERROR_MESSAGE);
		}
		catch (ParsingOsmErrorException ex)
		{
			JOptionPane.showMessageDialog(this, "Error while parsing source file", "Error", JOptionPane.ERROR_MESSAGE);
		}
		catch (CanNotDeleteExistsDatabaseFileErrorException ex)
		{
			JOptionPane.showMessageDialog(this, "Can not delete exists database file", "Error", JOptionPane.ERROR_MESSAGE);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jButtonConvert = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    jButtonConvert.setText("Конвертировать");
    jButtonConvert.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButtonConvertActionPerformed(evt);
      }
    });

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .add(jButtonConvert)
        .add(0, 419, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(jButtonConvert)
        .addContainerGap(78, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jButtonConvertActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonConvertActionPerformed
  {//GEN-HEADEREND:event_jButtonConvertActionPerformed
		JFileChooser sourceFileChooser = new JFileChooser();
		sourceFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

		int sourceFileShowDialogResult = sourceFileChooser.showOpenDialog(this);
		if (sourceFileShowDialogResult == JFileChooser.APPROVE_OPTION)
		{
			File sourceFile = sourceFileChooser.getSelectedFile();
			JFileChooser destenationFileChooser = new JFileChooser(sourceFile.getPath());
			int destenationFileShowDialogResult = destenationFileChooser.showSaveDialog(this);
			if (destenationFileShowDialogResult == JFileChooser.APPROVE_OPTION)
			{
				runConvertion(sourceFile, destenationFileChooser.getSelectedFile());
			}
		}
  }//GEN-LAST:event_jButtonConvertActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButtonConvert;
  // End of variables declaration//GEN-END:variables
}
